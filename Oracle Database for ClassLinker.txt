-- Table: INSTITUTE
CREATE TABLE INSTITUTE (
    INS_ID       NUMBER PRIMARY KEY,
    INS_NAME     VARCHAR2(70),
    INS_CODE     NUMBER,
    INS_ADDRESS  VARCHAR2(100),
    INS_EMAIL    VARCHAR2(40),
    INS_MOBILE   NUMBER(10),
    INS_PASS     VARCHAR2(100),
    AD_NAME      VARCHAR2(30),
    AD_MOBILE    NUMBER(10),
    AD_EMAIL     VARCHAR2(30),
    AD_PIC       BLOB,
    CONSTRAINT UK_INS_EMAIL UNIQUE (INS_EMAIL)
);

-- Table: DEPARTMENT
CREATE TABLE DEPARTMENT (
    DEP_ID     NUMBER PRIMARY KEY,
    DEP_NAME   VARCHAR2(50)
);

-- Table: COURSE
CREATE TABLE COURSE (
    CRS_ID     NUMBER PRIMARY KEY,
    CRS_NAME   VARCHAR2(50)
);

-- Table: CLASS
CREATE TABLE CLASS (
    CLS_ID     NUMBER PRIMARY KEY,
    CLS_NAME   VARCHAR2(20),
    SECTION    NUMBER
);

-- Table: TEACHER
CREATE TABLE TEACHER (
    TCH_ID      NUMBER PRIMARY KEY,
    TCH_NAME    VARCHAR2(30),
    TCH_MOBILE  NUMBER(10),
    TCH_EMAIL   VARCHAR2(40),
    TCH_PASS    VARCHAR2(100),
    TCH_PIC     BLOB,
    TCH_CODE    NUMBER,
    VERIFIED    NUMBER,
    INS_ID      NUMBER,
    CONSTRAINT FK_TCH_INS FOREIGN KEY (INS_ID) REFERENCES INSTITUTE(INS_ID)
);

-- Table: IDCC
CREATE TABLE IDCC (
    IDCC_ID     NUMBER PRIMARY KEY,
    INS_ID      NUMBER,
    DEP_ID      NUMBER,
    CRS_ID      NUMBER,
    CLS_ID      NUMBER,
    CONSTRAINT FK_IDCC_INS FOREIGN KEY (INS_ID) REFERENCES INSTITUTE(INS_ID),
    CONSTRAINT FK_IDCC_DEP FOREIGN KEY (DEP_ID) REFERENCES DEPARTMENT(DEP_ID),
    CONSTRAINT FK_IDCC_CRS FOREIGN KEY (CRS_ID) REFERENCES COURSE(CRS_ID),
    CONSTRAINT FK_IDCC_CLS FOREIGN KEY (CLS_ID) REFERENCES CLASS(CLS_ID)
);

-- Table: SUBJECT
CREATE TABLE SUBJECT (
    SUB_ID      NUMBER PRIMARY KEY,
    SUB_NAME    VARCHAR2(30),
    IDCC_ID     NUMBER,
    TCH_ID      NUMBER,
    CONSTRAINT FK_TCH_ID FOREIGN KEY (TCH_ID) REFERENCES TEACHER(TCH_ID),
    CONSTRAINT FK_IDCC_ID FOREIGN KEY (IDCC_ID) REFERENCES IDCC(IDCC_ID)
);

-- Table: STUDENT
CREATE TABLE STUDENT (
    STD_ID      NUMBER PRIMARY KEY,
    STD_NAME    VARCHAR2(30),
    STD_DOB     DATE,
    STD_MOBILE  NUMBER(10),
    STD_EMAIL   VARCHAR2(40),
    STD_PASS    VARCHAR2(100),
    STD_PIC     BLOB,
    STD_DOC     BLOB,
    SCH_ID      NUMBER,
    VERIFIED    NUMBER,
    IDCC_ID     NUMBER,
    SECTION     NUMBER,
    CONSTRAINT FK_STD_IDCC FOREIGN KEY (IDCC_ID) REFERENCES IDCC(IDCC_ID),
    CONSTRAINT UK_STD_EMAIL UNIQUE (STD_EMAIL),
    CONSTRAINT UK_STD_MOBILE UNIQUE (STD_MOBILE)
);

-- Table: NOTES
CREATE TABLE NOTES (
    NOTES_ID     NUMBER PRIMARY KEY,
    NOTES_NAME   VARCHAR2(30),
    SUB_ID       NUMBER,
    NOTES_FILE   BLOB,
    FILE_TYPE    VARCHAR2(100),
    CONSTRAINT FK_NOTES_SUB FOREIGN KEY (SUB_ID) REFERENCES SUBJECT(SUB_ID)
);

-- Table: ASSIGNMENT
CREATE TABLE ASSIGNMENT (
    AS_ID      NUMBER PRIMARY KEY,
    AS_NAME    VARCHAR2(30),
    SUB_ID     NUMBER,
    AS_FILE    BLOB,
    FILE_TYPE  VARCHAR2(100),
    CONSTRAINT FK_AS_SUB FOREIGN KEY (SUB_ID) REFERENCES SUBJECT(SUB_ID)
);

-- Table: ATTENDANCE
CREATE TABLE ATTENDANCE (
    ATTEND_ID      NUMBER PRIMARY KEY,
    ATTEND_DATE    DATE,
    ATTEND_STATUS  VARCHAR2(10),
    STD_ID         NUMBER,
    SUB_ID         NUMBER,
    CONSTRAINT FK_ATTEND_STD FOREIGN KEY (STD_ID) REFERENCES STUDENT(STD_ID),
    CONSTRAINT FK_ATTEND_SUB FOREIGN KEY (SUB_ID) REFERENCES SUBJECT(SUB_ID)
);

-- Table: CHAT
CREATE TABLE CHAT (
    CHAT_ID   NUMBER PRIMARY KEY,
    USER_ID   NUMBER,
    MESSAGE   VARCHAR2(2000),
    USER_NAME VARCHAR2(40)
);

--------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------

-- VIEW
CREATE VIEW CLASS_VIEW AS
SELECT DISTINCT 
    INST.INS_ID, INST.INS_NAME,
    ID.IDCC_ID, DP.DEP_ID, 
-- View: CLASS_VIEW
    DP.DEP_NAME, CR.CRS_ID, 
    CR.CRS_NAME, CL.CLS_ID, 
    CL.CLS_NAME, CL.SECTION
FROM IDCC ID 
JOIN INSTITUTE INST ON INST.INS_ID = ID.INS_ID 
JOIN COURSE CR ON CR.CRS_ID = ID.CRS_ID 
JOIN DEPARTMENT DP ON DP.DEP_ID = ID.DEP_ID
JOIN CLASS CL ON CL.CLS_ID = ID.CLS_ID;

-- View: STUDENT_VIEW
CREATE VIEW STUDENT_VIEW AS
SELECT DISTINCT ST.STD_ID, ST.STD_NAME, ST.STD_DOB, ST.STD_MOBILE, ST.STD_EMAIL, ST.STD_PIC,
ST.STD_DOC, ST.VERIFIED, ST.SCH_ID, ST.SECTION, INS.INS_ID, INS.INS_NAME, ID.IDCC_ID, DP.DEP_ID, 
DP.DEP_NAME, CRS.CRS_ID, CRS.CRS_NAME, CLS.CLS_ID, CLS.CLS_NAME
FROM STUDENT ST JOIN IDCC ID ON ST.IDCC_ID=ID.IDCC_ID JOIN INSTITUTE INS ON
INS.INS_ID=ID.INS_ID JOIN DEPARTMENT DP ON DP.DEP_ID=ID.DEP_ID JOIN COURSE CRS
ON CRS.CRS_ID=ID.CRS_ID JOIN CLASS CLS ON CLS.CLS_ID=ID.CLS_ID;

-- View: SUBJECT_VIEW
CREATE VIEW SUBJECT_VIEW AS
SELECT DISTINCT 
    INST.INS_ID, INST.INS_NAME,
    ID.IDCC_ID, DP.DEP_ID, 
    DP.DEP_NAME, CR.CRS_ID, 
    CR.CRS_NAME, CL.CLS_ID, 
    CL.CLS_NAME, CL.SECTION, SUB.SUB_ID,SUB.SUB_NAME,TCH.TCH_ID, TCH.TCH_NAME
FROM IDCC ID 
JOIN INSTITUTE INST ON INST.INS_ID = ID.INS_ID 
JOIN COURSE CR ON CR.CRS_ID = ID.CRS_ID 
JOIN DEPARTMENT DP ON DP.DEP_ID = ID.DEP_ID
JOIN CLASS CL ON CL.CLS_ID = ID.CLS_ID
JOIN SUBJECT SUB ON SUB.IDCC_ID=ID.IDCC_ID 
LEFT JOIN TEACHER TCH ON TCH.TCH_ID=SUB.TCH_ID;

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------

-- SEQUENCE
-- Sequence for TEACHER primary key (TCH_ID)
CREATE SEQUENCE TCH_ID_SEQ 
START WITH 10000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for SUBJECT primary key (SUB_ID)
CREATE SEQUENCE SUB_ID_SEQ 
START WITH 20000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for INSTITUTE primary key (INS_ID)
CREATE SEQUENCE INS_ID_SEQ 
START WITH 30000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for DEPARTMENT primary key (DEP_ID)
CREATE SEQUENCE DEP_ID_SEQ 
START WITH 40000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for COURSE primary key (CRS_ID)
CREATE SEQUENCE CRS_ID_SEQ 
START WITH 50000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for CLASS primary key (CLS_ID)
CREATE SEQUENCE CLS_ID_SEQ 
START WITH 60000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for STUDENT primary key (STD_ID)
CREATE SEQUENCE STD_ID_SEQ 
START WITH 70000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for IDCC primary key (IDCC_ID)
CREATE SEQUENCE IDCC_ID_SEQ 
START WITH 80000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for NOTES primary key (NOTES_ID)
CREATE SEQUENCE NOTES_ID_SEQ 
START WITH 90000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for ASSIGNMENT primary key (AS_ID)
CREATE SEQUENCE ASSIGNMENT_ID_SEQ 
START WITH 100000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for ATTENDANCE primary key (ATTEND_ID)
CREATE SEQUENCE ATTEND_ID_SEQ 
START WITH 110000001
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Sequence for CHAT primary key (CHAT_ID)
CREATE SEQUENCE CHAT_ID_SEQ 
START WITH 120000001
INCREMENT BY 1
NOCACHE
NOCYCLE;
